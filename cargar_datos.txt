-- SCHEMA DDL SEGÚN EL LOG DE HIBERNATE (PostgreSQL 17.5)
-- Estas tablas son creadas automáticamente por Hibernate al levantar el backend

CREATE TABLE persona (
    idpersona INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    apellidos VARCHAR(45) NOT NULL,
    celular VARCHAR(9),
    direccion VARCHAR(45),
    dni VARCHAR(10) NOT NULL,
    fecha_nacimiento DATE,
    nombres VARCHAR(45) NOT NULL
);

CREATE TABLE usuario (
    idusuario INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    codigo_cmp VARCHAR(20),
    contrasenia VARCHAR(255) NOT NULL,
    correo VARCHAR(50) NOT NULL,
    estado BOOLEAN NOT NULL,
    tipousuario VARCHAR(255) NOT NULL CHECK (tipousuario IN ('PACIENTE','DOCTOR','ADMIN','COORDINADOR')),
    idpersona INTEGER NOT NULL,
    CONSTRAINT fk_usuario_persona FOREIGN KEY (idpersona) REFERENCES persona(idpersona),
    CONSTRAINT uk_usuario_codigo_cmp UNIQUE (codigo_cmp),
    CONSTRAINT uk_usuario_correo UNIQUE (correo)
);

CREATE TABLE especialidad (
    idespecialidad INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    descripcion VARCHAR(255),
    nombre VARCHAR(45) NOT NULL
);

CREATE TABLE servicio (
    idservicio INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    descripcion VARCHAR(500),
    nombre VARCHAR(100) NOT NULL,
    riesgos VARCHAR(500),
    idespecialidad INTEGER,
    CONSTRAINT fk_servicio_especialidad FOREIGN KEY (idespecialidad) REFERENCES especialidad(idespecialidad)
);

CREATE TABLE consultorio (
    idconsultorio INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    direccion VARCHAR(45),
    estado BOOLEAN DEFAULT TRUE NOT NULL,
    latitud FLOAT NOT NULL,
    longitud FLOAT NOT NULL,
    nombre VARCHAR(255) NOT NULL,
    ruc VARCHAR(11),
    telefono VARCHAR(9)
);

CREATE TABLE consultorio_serviciou (
    idconsultorioserviciouser INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    idconsultorio INTEGER,
    idservicio INTEGER,
    idusuario INTEGER,
    CONSTRAINT fk_csvu_consultorio FOREIGN KEY (idconsultorio) REFERENCES consultorio(idconsultorio),
    CONSTRAINT fk_csvu_servicio FOREIGN KEY (idservicio) REFERENCES servicio(idservicio),
    CONSTRAINT fk_csvu_usuario FOREIGN KEY (idusuario) REFERENCES usuario(idusuario)
);

CREATE TABLE cita (
    idcita INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    descripcion VARCHAR(500),
    estado SMALLINT NOT NULL CHECK (estado BETWEEN 0 AND 5),
    fecha_hora_fin TIMESTAMP,
    fecha_hora_inicio TIMESTAMP NOT NULL,
    motivo VARCHAR(255) NOT NULL,
    motivo_cancelacion VARCHAR(500),
    idconsultorioserviciouser INTEGER NOT NULL,
    idpaciente INTEGER,
    CONSTRAINT fk_cita_csvu FOREIGN KEY (idconsultorioserviciouser) REFERENCES consultorio_serviciou(idconsultorioserviciouser),
    CONSTRAINT fk_cita_paciente FOREIGN KEY (idpaciente) REFERENCES usuario(idusuario)
);

CREATE TABLE detalle_pago (
    iddetallepago INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    estado_pago VARCHAR(255) NOT NULL CHECK (estado_pago IN ('PENDIENTE','PAGADO','RECHAZADO','REEMBOLSADO','CANCELADO')),
    metodo_pago VARCHAR(255) NOT NULL CHECK (metodo_pago IN ('EFECTIVO','TRANSFERENCIA','YAPE','PLIN','TARJETA')),
    monto NUMERIC(10,2) NOT NULL,
    idcita INTEGER,
    CONSTRAINT fk_detalle_pago_cita FOREIGN KEY (idcita) REFERENCES cita(idcita),
    CONSTRAINT uk_detalle_pago_cita UNIQUE (idcita)
);

CREATE TABLE diagnostico (
    iddiagnostico INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    descripcion VARCHAR(1000) NOT NULL,
    fecha_diagnostico DATE NOT NULL,
    idcita INTEGER,
    CONSTRAINT fk_diagnostico_cita FOREIGN KEY (idcita) REFERENCES cita(idcita)
);

CREATE TABLE receta (
    idreceta INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    descripcion VARCHAR(1000) NOT NULL,
    fecha_receta DATE NOT NULL,
    idcita INTEGER,
    CONSTRAINT fk_receta_cita FOREIGN KEY (idcita) REFERENCES cita(idcita)
);

CREATE TABLE horario_doctor (
    idhorariodoctor INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    dia_semana VARCHAR(255) NOT NULL CHECK (dia_semana IN ('LUNES','MARTES','MIERCOLES','JUEVES','VIERNES','SABADO','DOMINGO')),
    hora_fin TIMESTAMP NOT NULL,
    hora_inicio TIMESTAMP NOT NULL,
    iddoctor INTEGER,
    CONSTRAINT fk_horario_usuario FOREIGN KEY (iddoctor) REFERENCES usuario(idusuario)
);

-- DATOS DE PRUEBA PARA TRES USUARIOS: PACIENTE, DOCTOR, ADMIN

-- Personas
INSERT INTO persona (nombres, apellidos, dni, celular, direccion, fecha_nacimiento) VALUES
('Juan', 'Perez', '12345678', '999123456', 'Av. Lima 123', '1985-03-22'),
('Ana', 'Gomez', '87654321', '988765432', 'Av. Piura 456', '1982-08-10'),
('Carlos', 'Mendoza', '11223344', '977112233', 'Av. Cusco 789', '1975-06-18');

-- Usuarios
INSERT INTO usuario (contrasenia, correo, estado, tipousuario, idpersona) VALUES
('paciente', 'paciente@gmail.com', TRUE, 'PACIENTE', 1),
('doctor', 'doctor@gmail.com', TRUE, 'DOCTOR', 2),
('admin', 'admin@gmail.com', TRUE, 'ADMIN', 3);

-- Especialidades
INSERT INTO especialidad (nombre, descripcion) VALUES
('Cardiología', 'Tratamiento de enfermedades cardíacas'),
('Dermatología', 'Tratamiento de enfermedades de la piel');

-- Servicios
INSERT INTO servicio (nombre, descripcion, riesgos, idespecialidad) VALUES
('Consulta Cardiológica', 'Evaluación de síntomas cardíacos', 'Ninguno', 1),
('Consulta Dermatológica', 'Diagnóstico de alergias cutáneas', 'Posibles reacciones', 2);

-- Consultorio
INSERT INTO consultorio (nombre, direccion, estado, latitud, longitud, ruc, telefono) VALUES
('Consultorio Central', 'Av. Salud 123', TRUE, -12.05, -77.04, '20481234567', '999888777');

-- Relación consultorio-servicio-usuario (Doctor)
INSERT INTO consultorio_serviciou (idconsultorio, idservicio, idusuario) VALUES
(1, 1, 2);

-- Cita de prueba (Paciente con Doctor)
INSERT INTO cita (motivo, descripcion, estado, fecha_hora_inicio, fecha_hora_fin, idconsultorioserviciouser, idpaciente) VALUES
('Dolor en el pecho', 'Consulta inicial', 1, '2025-07-20 09:00:00', '2025-07-20 09:30:00', 1, 1);

-- Diagnóstico
INSERT INTO diagnostico (descripcion, fecha_diagnostico, idcita) VALUES
('Arritmia leve', '2025-07-20', 1);

-- Receta
INSERT INTO receta (descripcion, fecha_receta, idcita) VALUES
('Tomar Atenolol 50mg por 30 días', '2025-07-20', 1);

-- Horario Doctor
INSERT INTO horario_doctor (dia_semana, hora_inicio, hora_fin, iddoctor) VALUES
('LUNES', '2025-07-21 08:00:00', '2025-07-21 12:00:00', 2);
